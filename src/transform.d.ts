import { Vec3 } from "./vector";
declare function embed(base: Vec3[], target: Vec3[]): Vec3[];
declare function swap(v: Vec3[], d1: number, d2: number): Vec3[];
declare function put(k: number[]): Vec3;
declare function scale(v: Vec3[], size: number): Vec3[];
declare function diffusion(v: Vec3[], factor: number): Vec3[];
declare function center(b: Vec3[]): Vec3;
declare function move(b: Vec3[], x?: number, y?: number, z?: number): Vec3[];
declare function moveTo(b: Vec3[], from: Vec3, to: Vec3): Vec3[];
declare function moveCenter(b: Vec3[]): Vec3[];
declare function array_gen(xn: number, yn: number, zn: number, dx?: number, dy?: number, dz?: number): Vec3[];
declare function array_gen_fn(xn: number, yn: number, zn: number, dx: (a: number) => number, dy: (a: number) => number, dz: (a: number) => number): Vec3[];
declare function rotate(v: Vec3[], angle: number): Vec3[];
declare function pipe(...mat: Vec3[][]): Vec3[];
declare function reduce_pos(v: Vec3[]): Vec3[];
declare function round_pos(v: Vec3[]): Vec3[];
declare const fmap: (f: (arg: number) => number) => (v: Vec3) => Vec3;
export { put, fmap, round_pos, scale, diffusion, rotate, swap, embed, move, center, moveCenter, moveTo, pipe, array_gen, array_gen_fn, reduce_pos, };
